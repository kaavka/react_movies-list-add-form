{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","utils/validateUrls.ts","components/TextField/TextField.tsx","utils/getRandomDigits.ts","components/TextField/constants.ts","components/NewMovie/constants.ts","components/NewMovie/NewMovie.tsx","App.tsx","utils/trimObjectStrings.ts","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","validateUrls","value","test","TextField","name","label","placeholder","required","error","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","isRequiredAndHasNoValue","hasError","errorMessage","htmlFor","type","classNames","onBlur","DEFAULT_FORM_VALUES","NewMovie","onAdd","formData","setFormData","count","setCount","handleInputChange","event","target","prevState","isImdbUrlValid","isImgUrlValid","isTitleValid","Boolean","trim","isImdbIdValid","isSubmitDisabled","onSubmit","preventDefault","disabled","App","moviesFromServer","moviesList","setMoviesList","obj","Object","entries","reduce","acc","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.060813cf.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { ValidationCallback } from '../types';\n\n// eslint-disable-next-line max-len\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport const validateUrls: ValidationCallback = (value) => {\n  return pattern.test(value);\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getRandomDigits } from '../../utils';\nimport {\n  ERROR_MESSAGE_FOR_EMPTY_INPUT,\n  ERROR_MESSAGE_FOR_VALIDATION,\n} from './constants';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  error?: boolean,\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  error,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const isRequiredAndHasNoValue = (required && !value);\n  const hasError = touched && (isRequiredAndHasNoValue || error);\n  const errorMessage = `${label} ${isRequiredAndHasNoValue\n    ? ERROR_MESSAGE_FOR_EMPTY_INPUT\n    : ERROR_MESSAGE_FOR_VALIDATION}`;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">\n          {errorMessage}\n        </p>\n      )}\n    </div>\n  );\n};\n","export function getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n","export const ERROR_MESSAGE_FOR_EMPTY_INPUT = 'is required';\nexport const ERROR_MESSAGE_FOR_VALIDATION = 'not valid';\n","export const DEFAULT_FORM_VALUES = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types';\nimport { validateUrls } from '../../utils';\nimport { DEFAULT_FORM_VALUES } from './constants';\n\ninterface Props {\n  onAdd: (movie: Movie) => void\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [formData, setFormData] = useState(DEFAULT_FORM_VALUES);\n  const [count, setCount] = useState(0);\n\n  function resetFormInputs() {\n    setFormData(DEFAULT_FORM_VALUES);\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!formData.title.trim()) {\n      return;\n    }\n\n    setCount(prevState => prevState + 1);\n    onAdd(formData);\n    resetFormInputs();\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const isImdbUrlValid = validateUrls(formData.imdbUrl);\n  const isImgUrlValid = validateUrls(formData.imgUrl);\n  const isTitleValid = Boolean(formData.title.trim());\n  const isImdbIdValid = Boolean(formData.imdbId.trim());\n  const isSubmitDisabled = (\n    !isTitleValid\n    || !isImdbIdValid\n    || !isImdbUrlValid\n    || !isImgUrlValid\n  );\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formData.title}\n        onChange={handleInputChange}\n        error={!isTitleValid}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formData.description}\n        onChange={handleInputChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={formData.imgUrl}\n        onChange={handleInputChange}\n        error={!isImgUrlValid}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={formData.imdbUrl}\n        onChange={handleInputChange}\n        error={!isImdbUrlValid}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formData.imdbId}\n        onChange={handleInputChange}\n        error={!isImdbIdValid}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isSubmitDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\nimport { trimObjectStrings } from './utils';\n\nexport const App = () => {\n  const [moviesList, setMoviesList] = useState(moviesFromServer);\n\n  const handleAddMovie = (movie: Movie): void => {\n    setMoviesList((prevState) => ([\n      ...prevState,\n      trimObjectStrings(movie),\n    ]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import { Movie } from '../types';\n\nexport const trimObjectStrings = (obj: Movie): Movie => {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    return {\n      ...acc,\n      [key]: value.trim(),\n    };\n  }, {} as Movie);\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}